spring:
  application:
    name: roles-permissions-service-integration-test

  datasource:
    url: jdbc:postgresql://nucleus-staging.c6j42qq2krlk.us-east-1.rds.amazonaws.com:5432/postgres?sslmode=require&connectTimeout=30&socketTimeout=30
    username: postgres
    password: nucleus-staging
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 5
      minimum-idle: 2

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    defer-datasource-initialization: false

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 4
          max-idle: 4
          min-idle: 0
          max-wait: -1ms

  cache:
    type: redis
    redis:
      time-to-live: 300000 # 5 minutes
      cache-null-values: false

server:
  port: ${SERVER_PORT:8081}

logging:
  level:
    com.algobrewery.auth: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.test: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Custom application properties
app:
  security:
    jwt:
      secret: ${JWT_SECRET:integration-test-secret-key}
      expiration: ${JWT_EXPIRATION:86400000} # 24 hours
  cache:
    ttl:
      roles: 300000 # 5 minutes
      permissions: 60000 # 1 minute
      user-roles: 300000 # 5 minutes

# Test specific properties
test:
  database:
    cleanup: true
    isolation: true
  integration:
    timeout: 30s
    retry-attempts: 3
